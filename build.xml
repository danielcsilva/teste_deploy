<?xml version="1.0" encoding="UTF-8"?>

<project name="teste_job" default="build">

	<property name="basedir" value="."/>
	<property name="pdepend" value="${basedir}/vendor/bin/pdepend"/>
	<property name="phpcpd"  value="${basedir}/vendor/bin/phpcpd"/>
	<property name="phpcs"   value="${basedir}/vendor/bin/phpcs"/>
	<property name="phpdox"  value="${basedir}/vendor/bin/phpdox"/>
	<property name="phploc"  value="${basedir}/vendor/bin/phploc"/>
	<property name="phpmd"   value="${basedir}/vendor/bin/phpmd"/>
	<property name="phpunit" value="${basedir}/vendor/bin/phpunit"/>

    <target name="build"
            depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdox,phpunit"/>

    <target name="build-parallel"
            depends="prepare,lint,tools-parallel,phpunit"/>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdox"/>
        </parallel>
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/phpdox"/>
    </target>

 <target name="lint"
         unless="lint.done"
         description="Perform syntax check of sourcecode files">
  <apply executable="php" taskname="lint">
   <arg value="-l" />

   <fileset dir="${basedir}/src">
    <include name="**/*.php" />
   </fileset>

   <fileset dir="${basedir}/tests">
    <include name="**/*.php" />
   </fileset>
  </apply>

  <property name="lint.done" value="true"/>
 </target>

 <target name="phploc"
			 unless="phploc.done"
			 description="Measure project size using PHPLOC and print human readable output. Intended for usage on the command line.">
	  <exec executable="${phploc}" taskname="phploc">
	   <arg value="--count-tests" />
	   <arg path="${basedir}/src" />
	   <arg path="${basedir}/tests" />
	  </exec>

	  <property name="phploc.done" value="true"/>
	 </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${basedir}/src" />
            <arg value="text" />
            <arg value="${basedir}/jenkins/phpmd.xml" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${basedir}/src" />
            <arg value="xml" />
            <arg value="${basedir}/jenkins/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--standard=${basedir}/jenkins/phpcs.xml" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs">
           <arg line="--report=checkstyle 
                      --report-file=${basedir}/build/logs/checkstyle.xml
                      --standard=${basedir}/jenkins/phpcs.xml
                      --extensions=php
           ${basedir}/src" />
  </exec>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg path="${basedir}/src" />
        </exec>
    </target>

    <target name="phpdox" description="Generate API documentation using phpDox">
        <exec executable="phpdox">
            <arg line="--file ${basedir}/jenkins/phpdox.xml" />
        </exec>
    </target>

    <target name="phpunit" description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
        <exec executable="phpunit" failonerror="true">
            <arg line="--configuration ${basedir}/src/protected/tests/phpunit.xml" />
            <arg line="--log-junit ${basedir}/build/logs/junit.xml" />
            <arg line="--coverage-clover ${basedir}/build/logs/clover.xml" />
            <arg line="${basedir}/src/protected/tests/unit" />
        </exec>
    </target>
	
	<dirname property="build.dir" file="${ant.file}" />
</project>
